---
import '../styles/global.css'

import Profile from '../components/Profile.astro'
import Contact from '../components/Contact.astro'
import ContentLink from '../components/ContentLink.astro'
import { ClientRouter } from "astro:transitions"

const { meta } = Astro.props

const links = [
  { url: '/', name: 'home.html' },
  { url: '/contact/', name: 'contact.html' },
  { url: '/apps/', name: 'apps.html' },
  { url: '/websites/', name: 'websites.html' },
]
---

<!doctype html>
<html lang="en" class="bg-black text-gray-100 font-mono">
  <head>
    <meta
      name="robots"
      content="index, follow, noodp, max-image-preview:large, max-snippet:-1, max-video-preview:-1"
    />
    <meta name="revisit-after" content="7 days" />
    <meta name="revisit" content="after 7 days" />
    <meta charset="UTF-8" />
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
    <meta http-equiv="Pragma" content="cache" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link
      rel="icon"
      type="image/svg+xml"
      crossorigin="anonymous"
      href="/img/logo.svg"
    />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="canonical" href={Astro.url} />
    <meta name="geo.region" content="US-OH" />
    <meta name="author" content="Matt Waler" />
    <meta name="publisher" content="Matt Waler" />
    <meta name="copyright" content="Matt Waler" />
    <meta property="og:title" content={meta.title} />
    <meta property="og:description" content={meta.description} />
    <meta property="og:url" content="https://mattwaler.com" />
    <meta property="og:type" content="website" />
    <meta property="og:image" content={meta.ogImage ?? 'https://mattwaler.com/img/meta.png'} />
    <meta property="og:locale" content="en_US" />
    <meta property="og:site_name" content="mattwaler.com" />
    <title>{meta.title}</title>
    <meta name="description" content={meta.description} />
    <meta name="abstract" content={meta.description} />
    <ClientRouter />
  </head>
  <body
    class:list={[
      'min-h-[100vh] flex items-center justify-center p-4',
      { 'debug-screens': import.meta.env.DEV },
    ]}
  >
    <main
      class="w-full max-w-full md:max-w-7xl border border-gray-600 rounded-2xl overflow-hidden shadow-2xl relative bg-black mb-12 md:mb-4"
    >
      <div class="w-full h-10 px-8 md:px-6 flex items-center justify-start gap-2 border-b border-gray-600">
        <div class="rounded-full size-3 bg-red-500"></div>
        <div class="rounded-full size-3 bg-yellow-500"></div>
        <div class="rounded-full size-3 bg-green-500"></div>
      </div>
      <div class="flex flex-col md:flex-row">
        <div
          class="p-8 md:p-6 flex flex-col justify-between w-full md:w-2/5 border-b md:border-b-0 md:border-r border-gray-600"
        >
          <Profile />
          <Contact />
        </div>
        <div class="w-full md:w-4/5 p-0">
          <div class="min-h-full h-[90vh] flex flex-col overflow-y-scroll">
            <div class="tab-controls">
              <div
                class="flex bg-black border-b border-gray-600 sticky top-0 z-10"
              >
                {links.map(link => (
                  <ContentLink href={link.url} name={link.name} />
                ))}
              </div>
              <div class="p-6 flex-grow overflow-y-auto bg-black">
                <slot />
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
  </body>
</html>
